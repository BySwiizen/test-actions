name: "run ci"

on:
  workflow_call:
    inputs:
      setup-gradle:
        type: boolean
        description: "Setup Gradle wrapper"
        required: false
        default: false
      validate-wrapper:
        type: boolean
        description: "Validate wrapper files"
        required: false
        default: false
      jdk:
       type: number
       description: "Java version to use for testing"
       required: false
       default: 21
      build-project:
        type: string
        description: "Build project"
        required: false
        default: "2,5"
      upload:
        type: string
        description: "Upload build artifacts"
        required: false
        default: ''

  jobs:
    build:
      if: ${{ github.repository != 'BySwiizen/test-actions' }}
      runs-on: ubuntu-latest
      steps:
        - name: "checkout git repository"
          uses: actions/checkout@v2
        - name: Setup Gradle
          if: ${{ inputs.setup-gradle }}
          uses: gradle/actions/setup-gradle@v4.2.2
        - name: "Wrapper validation"
          if: ${{ inputs.validate-wrapper }}
          uses: gradle/actions/wrapper-validation@v4.2.2
        - name: "Set up JDK ${{ inputs.jdk }}"
          if: ${{ inputs.jdk }}
          uses: actions/setup-java@v1
          with:
            distribution: "temurin"
            java-version: "${{ inputs.jdk }}"
            java-package: jdk
            architecture: x64
            cache: gradle
        - name: Configure Git
          run: git config --global user.name "Github Actions" && git config --global user.email "actions@github.com"
        - name: Make Gradlew executable
          run: chmod +x ./gradlew
        - name: Split build-project input
          id: split
          uses: winterjung/split@v2.1.0
          with:
            msg: ${{ inputs.build-project }}
            separator: ","
        - name: Build project
          if: ${{ steps.split.outputs._0 && steps.split.outputs._1 }}
          uses: nick-invision/retry@v3.0.0
          with:
            max_attempts: ${{ steps.split.outputs._0 }}
            timeout_minutes: ${{ steps.split.outputs._1 }}
            command: ./gradlew build shadowJar
        - name: Upload build artifact
          if: ${{ inputs.upload != '' }}
          uses: actions/upload-artifact@v4.5.0
          with:
            name: Artifacts
            path: ${{ inputs.upload }}